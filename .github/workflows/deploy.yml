name: Deploy on Main Push

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Start SSH agent and add key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no root@185.170.214.106 << 'EOF'
            if [ ! -d "/var/www/customers-microservice/.git" ]; then
              git clone git@github.com:BaptisteLT/customers-microservice.git /var/www/customers-microservice
            fi
            cd /var/www/customers-microservice || exit
            git reset --hard
            git clean -fd
            git pull origin main
            chmod +x entrypoint.sh
            docker-compose -f docker-compose.prod.yml down

            #Change to prod env
            sed -i 's/^APP_ENV=.*/APP_ENV=prod/' /var/www/customers-microservice/customers-microservice/.env


            docker-compose -f docker-compose.prod.yml up -d --build --force-recreate

            #Installing composer dependencies
            docker exec php3 sh -c "cd /var/www/customers-microservice && composer install --no-dev --optimize-autoloader"

            # Creating tables in DB
            docker exec php3 sh -c "cd /var/www/customers-microservice && php bin/console doctrine:migrations:migrate --no-interaction"

            # Generate JWT Key Pair inside the container
            docker exec php3 sh -c "[ ! -f /var/www/customers-microservice/config/jwt/private.pem ] || [ ! -f /var/www/customers-microservice/config/jwt/public.pem ] && php bin/console lexik:jwt:generate-keypair || echo 'JWT keys already exist, skipping generation.'"

            #Changing ownership
            docker exec php3 chown -R www-data:www-data /var/www/customers-microservice/var/cache /var/www/customers-microservice/var/log
            #Change permissions
            docker exec php3 chmod -R 775 /var/www/customers-microservice/var/cache /var/www/customers-microservice/var/log


            docker-compose -f docker-compose.prod.yml ps
          EOF